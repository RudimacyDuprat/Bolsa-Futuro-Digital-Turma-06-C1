## Introdução

Nesta aula, vamos conhecer:

- **Operadores matemáticos**
- **Operadores de comparação**
- **Operadores de atribuição**
- **Incremento e decremento**
- **Ordem de execução**
- Uso prático com **condicionais**

---

## ➕ Operadores Matemáticos

O JavaScript possui os operadores básicos de matemática:

| Operador | Função | Exemplo | Resultado |
| --- | --- | --- | --- |
| `+` | Soma | `5 + 3` | `8` |
| `-` | Subtração | `5 - 3` | `2` |
| `*` | Multiplicação | `5 * 3` | `15` |
| `/` | Divisão | `6 / 2` | `3` |
| `%` | Módulo (resto) | `13 % 2` | `1` |
| `**` | Exponenciação | `2 ** 3` | `8` |

📌 **Atenção:**

- O operador `+` também faz **concatenação** se houver strings envolvidas:

```jsx
console.log("12" + 2); // "122" (concatenação, não soma)

```

---

## 🧮 Ordem de Operações

O JavaScript segue a mesma prioridade matemática:

1. Parênteses `( )`
2. Multiplicação, divisão e módulo
3. Soma e subtração

### Exemplo:

```jsx
let resultado = 12 + 5 * 2 + 4; // 26
let alterado = (12 + 5) * 2 + 4; // 38

```

---

## 🔍 Operadores de Comparação

Eles sempre retornam um **boolean** (`true` ou `false`).

| Operador | Função | Exemplo | Resultado |
| --- | --- | --- | --- |
| `>` | Maior que | `5 > 3` | `true` |
| `<` | Menor que | `5 < 3` | `false` |
| `>=` | Maior ou igual | `5 >= 5` | `true` |
| `<=` | Menor ou igual | `5 <= 4` | `false` |
| `==` | Igualdade (valor) | `12 == "12"` | `true` |
| `===` | Igualdade estrita (valor e tipo) | `12 === "12"` | `false` |
| `!=` | Diferente (valor) | `12 != "13"` | `true` |
| `!==` | Diferente estrito (valor e tipo) | `12 !== "12"` | `true` |

💡 **Boas práticas:** use sempre `===` e `!==` para evitar comparações inesperadas.

---

## 🔄 Incremento e Decremento

- **Pós-incremento:** `x++` → incrementa depois de usar o valor.
- **Pré-incremento:** `++x` → incrementa antes de usar o valor.
- Funciona também com decremento (`-`).

### Exemplo:

```jsx
let a = 1;
console.log(a++); // 1 (usa o valor, depois incrementa)
console.log(a);   // 2

let b = 1;
console.log(++b); // 2 (incrementa antes de usar)

```

---

## ✏️ Operadores de Atribuição Combinados

Permitem modificar o valor de uma variável sem repetir o nome dela.

| Operador | Equivalente a | Exemplo | Resultado |
| --- | --- | --- | --- |
| `+=` | `x = x + y` | `x += 5` | soma |
| `-=` | `x = x - y` | `x -= 5` | subtração |
| `*=` | `x = x * y` | `x *= 5` | multiplicação |
| `/=` | `x = x / y` | `x /= 5` | divisão |
| `%=` | `x = x % y` | `x %= 5` | módulo |

---

## 🛠 Uso prático: comparação com `if`

```jsx
let idade = 19;

if (idade >= 18) {
  console.log("Pode dirigir");
} else {
  console.log("Não pode dirigir");
}

```

📌 A comparação retorna **true** ou **false** e controla se o bloco de código será executado.

---

## 🧠 Resumo

- Operadores matemáticos (`+`, , , `/`, `%`, `*`)
- Comparações (`>`, `<`, `>=`, `<=`, `===`, `!==`)
- Incrementos (`++`, `-`) e atribuições combinadas (`+=`, `=` etc.)
- Ordem de execução igual à matemática
- Comparações retornam **boolean** e são essenciais em condicionais
