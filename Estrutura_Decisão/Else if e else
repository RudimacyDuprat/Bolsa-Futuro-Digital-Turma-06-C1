# Aula: Estruturas Condicionais ‚Äì `if`, `else if` e `else`

---

## 1Ô∏è‚É£ Estrutura b√°sica do `if`

A sintaxe do `if` √©:

```jsx
if (condicao) {
  // C√≥digo executado se a condi√ß√£o for verdadeira
}

```

üìå **Exemplo:**

```jsx
let idade = 19;

if (idade >= 18) {
  console.log("Pode entrar na festa.");
}

```

---

## 2Ô∏è‚É£ Adicionando o `else`

O `else` √© executado **somente se** a condi√ß√£o do `if` for **falsa**.

```jsx
let idade = 16;

if (idade >= 18) {
  console.log("Pode entrar na festa.");
} else {
  console.log("N√£o pode entrar.");
}

```

---

## 3Ô∏è‚É£ Usando `else if` para m√∫ltiplas condi√ß√µes

Quando precisamos verificar **mais de uma condi√ß√£o**, usamos `else if`:

```jsx
let idade = 17;

if (idade >= 18) {
  console.log("Pode entrar na festa.");
} else if (idade >= 16) {
  console.log("Pode entrar com autoriza√ß√£o dos pais.");
} else {
  console.log("N√£o pode entrar.");
}

```

---

## 4Ô∏è‚É£ Comparando valores com `!=` (diferente)

O operador `!=` verifica se **dois valores s√£o diferentes**.

```jsx
let nome = "Matheus";

if (nome != "Pedro") {
  console.log("O nome n√£o √© Pedro.");
}

```

---

## 5Ô∏è‚É£ `else` √© opcional

O bloco `else` **n√£o √© obrigat√≥rio**.

Podemos ter apenas um `if` ou `if` + `else if` sem precisar de `else` no final.

üìå **Exemplo sem `else`:**

```jsx
let idade = 20;

if (idade >= 18) {
  console.log("Pode dirigir.");
}

```

---

## 6Ô∏è‚É£ Exemplo completo

let nome = "Matheus";
let idade = 19;

if (nome === "Pedro") {
  console.log("Bem-vindo, Pedro!");
} else if (nome === "Matheus") {
  console.log("Bem-vindo, Matheus!");
} else {
  console.log("Usu√°rio desconhecido.");
}

if (idade >= 18) {
  console.log("Pode tirar a carteira de habilita√ß√£o.");
} else {
  console.log("Ainda n√£o pode tirar a carteira.");
}
